name: Android CI

on:
  push:
    branches:
      - main
      - "release/*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Download and install Android SDK
      - name: Install Android SDK
        run: |
          sudo mkdir -p /usr/lib/android-sdk
          sudo chown $USER:$USER /usr/lib/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip -d /usr/lib/android-sdk
          rm commandlinetools-linux-9477386_latest.zip
          export ANDROID_HOME=/usr/lib/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          # Create the latest directory if it doesn't exist
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          # Move the contents of the cmdline-tools directory to the latest directory
          yes | sdkmanager --licenses
        #   sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # Step 5: Grant execution permissions for Gradle wrapper
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # Step 6: Build the project
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Step 7: Run tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      # Optional Step 8: Run Lint checks
      - name: Run Lint Checks
        run: ./gradlew lint

      # Step 9: Upload APK as an artifact
      - name: Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
